from machine import reset, UART
uart = UART(1, 38400)
uart.init(38400, bits=8, parity=None, stop=1, rx=8, tx=9)

single_byte = bytearray(1)
frame = bytearray()

skip_repeats = [
    '011012010104d804', '011210010105d704',
    '011210010104d804', '011012010105d704',
    '011012010104d804011210010105d704',
    '01121001092102300101003001004e04',
    '011210010d211450010013500101125001028004',
    '0110120109200c210d2108500950a804',
    '011210011521102201000f220100062101010521010104210101ca04',
    '01121001142109500428000000085001010d2101010c2101016a04',
    '011012010b200421052106210f221022dd04',
    '011012010b20022203220a220c220e22df04',
    '011012010b2008300930195020502150f704',
    '011210011b2121500101205001011950010009300400a7760008300447ee6d001a04',
    '011012010f2000200220062007200820033004309004',
    '011210012321043004000000000330040000000008200100072001010620010902200111002001114204',
    '011210011e210c2204000028420a2204000028420e22010003220100022204840300006204',
    '0110120107201250135014508d04',
    '01101201092012001a0001e00af0ad04',
    '011012010520003002305604',
    '011210010104d804011012010105d704',
    '0110120104400050004904',
    '01121001034100504904',
    ]

while True:
    single_byte = uart.read(1) # Read next RS485 byte
    if single_byte:  # True if contains data / False if b''
        frame.extend(single_byte)  # Read bytes into frame bytearray
    elif frame:  # True if frame contains data / False if b''
        if frame.hex() in skip_repeats or \
        '011210019' in frame.hex() or \
        '008bc504044eed' in frame.hex(): # Ignore repeating frames and timing frames
            pass
        else:
            print(frame.hex())
        frame = bytearray()  # Reset to b'' for next cycle
    else:
        # frame is b''
        pass
